{"version":3,"file":"component---src-pages-404-js-601519c7a5775ec40fd8.js","mappings":"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","sources":["webpack://thomas-rutzer-digital-home/./src/pages/404.js"],"sourcesContent":["import anime from \"animejs\"\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\"\r\n\r\nimport * as ContentWrapper from \"../components/contentWrapper\"\r\nimport HeadInfos from \"../components/headInfos\"\r\nimport * as InternalLink from \"../components/internalLink\"\r\nimport * as LayoutWrapper from \"../components/layoutWrapper\"\r\nimport * as Cta from \"./../components/cta\"\r\n\r\nconst symbols = [\"0\", \"1\", \"2\", \"3\", \"4\"]\r\nconst symbolCount = 12\r\n\r\nconst Page404 = () => {\r\n  const fadeContainerRef = useRef()\r\n  const slotLane1Ref = useRef()\r\n  const slotLane2Ref = useRef()\r\n  const slotLane3Ref = useRef()\r\n  const timelineRef = useRef()\r\n  const ctaRef = useRef()\r\n\r\n  const [isSpinning, setIsSpinning] = useState(true)\r\n  const [lane1, setLane1] = useState([\r\n    ...fillWithRandomElements(symbolCount - 3, symbols),\r\n    getRandomElementFromList(symbols),\r\n    \"4\",\r\n    getRandomElementFromList(symbols),\r\n  ])\r\n  const [lane2, setLane2] = useState([\r\n    ...fillWithRandomElements(symbolCount - 3, symbols),\r\n    getRandomElementFromList(symbols),\r\n    \"0\",\r\n    getRandomElementFromList(symbols),\r\n  ])\r\n  const [lane3, setLane3] = useState([\r\n    ...fillWithRandomElements(symbolCount - 3, symbols),\r\n    getRandomElementFromList(symbols),\r\n    \"4\",\r\n    getRandomElementFromList(symbols),\r\n  ])\r\n\r\n  const onStartSpinning = useCallback(() => {\r\n    setIsSpinning(true)\r\n    timelineRef.current.play()\r\n\r\n    anime({\r\n      targets: ctaRef.current,\r\n      duration: 700,\r\n      opacity: 0,\r\n      easing: \"easeInOutQuad\",\r\n    })\r\n\r\n    anime({\r\n      targets: fadeContainerRef.current,\r\n      duration: 700,\r\n      opacity: 1,\r\n      easing: \"easeInOutQuad\",\r\n    })\r\n  }, [])\r\n\r\n  const onRestart = useCallback(() => {\r\n    anime({\r\n      targets: ctaRef.current,\r\n      duration: 700,\r\n      opacity: 1,\r\n      easing: \"easeInOutQuad\",\r\n    })\r\n\r\n    anime({\r\n      targets: fadeContainerRef.current,\r\n      duration: 700,\r\n      opacity: 0.05,\r\n      easing: \"easeInOutQuad\",\r\n      complete: () => {\r\n        setIsSpinning(false)\r\n        timelineRef.current.seek(0)\r\n\r\n        setLane1([\r\n          ...lane1.splice(symbolCount - 3, symbolCount),\r\n          ...fillWithRandomElements(9, symbols),\r\n        ])\r\n        setLane2([\r\n          ...lane2.splice(symbolCount - 3, symbolCount),\r\n          ...fillWithRandomElements(9, symbols),\r\n        ])\r\n        setLane3([\r\n          ...lane3.splice(symbolCount - 3, symbolCount),\r\n          ...fillWithRandomElements(9, symbols),\r\n        ])\r\n      },\r\n    })\r\n  }, [lane1, lane2, lane3])\r\n\r\n  const onEndSpinning = useCallback(() => {\r\n    const lane1EndValue = lane1[symbolCount - 2]\r\n    const lane2EndValue = lane2[symbolCount - 2]\r\n    const lane3EndValue = lane3[symbolCount - 2]\r\n    const isJackpot = lane1EndValue === lane2EndValue && lane1EndValue === lane3EndValue\r\n\r\n    if (isJackpot) {\r\n      anime({\r\n        targets: document.body,\r\n        duration: 1200,\r\n        keyframes: [\r\n          { filter: \"invert(100%)\", backgroundColor: \"#f8f8f8\" },\r\n          { filter: \"invert(0%)\", backgroundColor: \"#2e2d2d\" },\r\n          { filter: \"invert(100%)\", backgroundColor: \"#f8f8f8\" },\r\n          { filter: \"invert(0%)\", backgroundColor: \"#2e2d2d\" },\r\n        ],\r\n        easing: \"easeInOutQuad\",\r\n        complete() {\r\n          document.body.removeAttribute(\"style\")\r\n          onRestart()\r\n        },\r\n      })\r\n    } else {\r\n      onRestart()\r\n    }\r\n  }, [lane1, lane2, lane3, onRestart])\r\n\r\n  useEffect(() => {\r\n    timelineRef.current = anime.timeline({\r\n      complete: onEndSpinning,\r\n      autoplay: false,\r\n    })\r\n\r\n    timelineRef.current\r\n      .add({\r\n        targets: slotLane1Ref.current,\r\n        translateY: \"-300%\",\r\n        duration: 1200,\r\n        easing: \"easeOutSine\",\r\n      })\r\n      .add(\r\n        {\r\n          targets: slotLane2Ref.current,\r\n          translateY: \"-300%\",\r\n          duration: 1200,\r\n          easing: \"easeOutSine\",\r\n        },\r\n        \"-=400\"\r\n      )\r\n      .add(\r\n        {\r\n          targets: slotLane3Ref.current,\r\n          translateY: \"-300%\",\r\n          duration: 1200,\r\n          easing: \"easeOutSine\",\r\n        },\r\n        \"-=200\"\r\n      )\r\n  }, [lane1, lane2, lane3, onEndSpinning])\r\n\r\n  useEffect(() => {\r\n    anime({\r\n      targets: fadeContainerRef.current,\r\n      duration: 700,\r\n      opacity: 1,\r\n      easing: \"easeInOutQuad\",\r\n      complete: onStartSpinning,\r\n    })\r\n  }, [onStartSpinning])\r\n\r\n  return (\r\n    <>\r\n      <HeadInfos title=\"404 â€” Too bad\" />\r\n      <LayoutWrapper.Root>\r\n        <section className=\"bg-gradient-to-r from-black\">\r\n          <ContentWrapper.Root className=\"h-screen\" verticalSpacing>\r\n            <div className=\"col-span-full grid grid-rows-[1fr_min-content] gap-3 md:gap-5 md:col-start-2 md:col-span-9 w-full h-full overflow-hidden\">\r\n              <div className=\"relative h-full overflow-hidden\">\r\n                <div\r\n                  className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 z-10 opacity-0\"\r\n                  ref={ctaRef}\r\n                >\r\n                  <Cta.Root disabled={isSpinning} onClick={onStartSpinning}>\r\n                    Spin to Win!\r\n                  </Cta.Root>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 h-full  opacity-0\" ref={fadeContainerRef}>\r\n                  <div className=\"slot h-full overflow-hidden\">\r\n                    <div className=\"slot__lane h-full\" ref={slotLane1Ref}>\r\n                      {lane1.map((symbol, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className={\r\n                            \"slot__symbol flex justify-center items-center h-2/6 text-stroke text-stroke-white transition-colors duration-700\"\r\n                          }\r\n                        >\r\n                          {symbol}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"slot h-full overflow-hidden\">\r\n                    <div className=\"slot__lane h-full\" ref={slotLane2Ref}>\r\n                      {lane2.map((symbol, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className={\r\n                            \"slot__symbol flex justify-center items-center h-2/6 text-stroke text-stroke-white transition-colors duration-700\"\r\n                          }\r\n                        >\r\n                          {symbol}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"slot h-full overflow-hidden\">\r\n                    <div className=\"slot__lane h-full\" ref={slotLane3Ref}>\r\n                      {lane3.map((symbol, index) => (\r\n                        <span\r\n                          key={index}\r\n                          className={\r\n                            \"slot__symbol flex justify-center items-center h-2/6 text-stroke text-stroke-white transition-colors duration-700\"\r\n                          }\r\n                        >\r\n                          {symbol}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex flex-col items-center justify-center gap-4\">\r\n                <p className=\"text-center\">\r\n                  I couldn't find what you were looking for. <br></br>Go&nbsp;\r\n                  <InternalLink.Root link=\"/\">home</InternalLink.Root> or try your luck.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </ContentWrapper.Root>\r\n        </section>\r\n      </LayoutWrapper.Root>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction getRandomElementFromList(list) {\r\n  return list[Math.floor(Math.random() * list.length)]\r\n}\r\n\r\nfunction fillWithRandomElements(count, randomElementCollection) {\r\n  return Array.from(Array(count).keys()).reduce(\r\n    acc => [...acc, getRandomElementFromList(randomElementCollection)],\r\n    []\r\n  )\r\n}\r\n\r\nexport default Page404\r\n"],"names":["symbols","symbolCount","getRandomElementFromList","list","Math","floor","random","length","fillWithRandomElements","count","randomElementCollection","Array","from","keys","reduce","acc","concat","_toConsumableArray","fadeContainerRef","useRef","slotLane1Ref","slotLane2Ref","slotLane3Ref","timelineRef","ctaRef","_useState","useState","isSpinning","setIsSpinning","_useState2","lane1","setLane1","_useState3","lane2","setLane2","_useState4","lane3","setLane3","onStartSpinning","useCallback","current","play","anime","targets","duration","opacity","easing","onRestart","complete","seek","splice","onEndSpinning","lane1EndValue","lane2EndValue","lane3EndValue","document","body","keyframes","filter","backgroundColor","removeAttribute","useEffect","autoplay","add","translateY","React","HeadInfos","title","LayoutWrapper","className","ContentWrapper","verticalSpacing","ref","Cta","disabled","onClick","map","symbol","index","key","InternalLink","link"],"sourceRoot":""}